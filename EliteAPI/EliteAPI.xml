<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EliteAPI</name>
    </assembly>
    <members>
        <member name="T:EliteAPI.Discord.RichPresence">
            <summary>
            Class used to update the Rich Presence with.
            </summary>
        </member>
        <member name="M:EliteAPI.Discord.RichPresence.#ctor">
            <summary>
            Empty constructor for a rich presence.
            </summary>
        </member>
        <member name="M:EliteAPI.Discord.RichPresence.#ctor(System.String)">
            <summary>
            Basic constructor for a rich presence.
            </summary>
            <param name="line1">The first line of text.</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresence.#ctor(System.String,System.String)">
            <summary>
            Basic constructor for a rich presence.
            </summary>
            <param name="line1">The first line of text.</param>
            <param name="line2">The second line of text.</param>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.Text">
            <summary>
            The first line of text.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.TextTwo">
            <summary>
            The second line of text.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.Icon">
            <summary>
            The main icon ID.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.IconText">
            <summary>
            The text that should be displayed when hovering over the main icon.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.IconTwo">
            <summary>
            The secondary icon ID.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresence.IconTextTwo">
            <summary>
            The text that should be displayed when hovering over the secondary icon.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresenceClient.IsRunning">
            <summary>
            Whether the rich presence is running.
            </summary>
        </member>
        <member name="P:EliteAPI.Discord.RichPresenceClient.IsReady">
            <summary>
            Whether the rich presence is connected and ready.
            </summary>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.#ctor(EliteAPI.EliteDangerousAPI)">
            <summary>
            Creates a new Discord Rich Presence client based on the EliteDangerousAPI object.
            </summary>
            <param name="api">EliteDangerousAPI</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.#ctor(EliteAPI.EliteDangerousAPI,System.String)">
            <summary>
            Creates a new Discord Rich Presence client based on the EliteDangerousAPI object, with a custom RPC ID, for when you have your own Rich Presence registered with Discord.
            </summary>
            <param name="api">EliteDangerousAPI</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.WithCustomID(System.String)">
            <summary>
            Set a custom ID to be used, for when you have your own RPC registered with Discord.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.UpdatePresence(EliteAPI.Discord.RichPresence)">
            <summary>
            Update the rich presence.
            </summary>
            <param name="presence">The custom rich presence to display.</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.TurnOn(System.Boolean)">
            <summary>
            Turn the rich presence on.
            </summary>
            <param name="automatic">Whether to have EliteAPI send events to the presence.</param>
        </member>
        <member name="M:EliteAPI.Discord.RichPresenceClient.TurnOff">
            <summary>
            Turn the rich presence off.
            </summary>
        </member>
        <member name="M:EliteAPI.EDSM.EDSM.Execute(EliteAPI.EDSM.EDSMEntry)">
            <summary>
            Executes an EDSM API request.
            </summary>
            <param name="entry">The entry to process.</param>
            <returns></returns>
        </member>
        <member name="T:EliteAPI.EDSM.EDSMEntry">
            <summary>
            An entry for the EDSM API.
            </summary>
        </member>
        <member name="M:EliteAPI.EDSM.EDSMEntry.#ctor(System.String,EliteAPI.EDSM.EDSMParameter)">
            <summary>
            Creates a new EDSM API entry.
            </summary>
            <param name="url">The base URL for the API call.</param>
            <param name="parameter">The parameters for the API call.</param>
        </member>
        <member name="M:EliteAPI.EDSM.EDSMEntry.#ctor(System.String,EliteAPI.EDSM.EDSMParameter[])">
            <summary>
            Creates a new EDSM API entry.
            </summary>
            <param name="url">The base URL for the API call.</param>
            <param name="parameters">A list of parameters for the API call.</param>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMEntry.Url">
            <summary>
            The base URL of the API call.
            </summary>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMEntry.Parameters">
            <summary>
            The list of parameters for the API call.
            </summary>
        </member>
        <member name="T:EliteAPI.EDSM.EDSMParameter">
            <summary>
            A parameter for an EDSM API call.
            </summary>
        </member>
        <member name="M:EliteAPI.EDSM.EDSMParameter.#ctor(System.String,System.Object)">
            <summary>
            Creates a new EDSM parameter.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter.</param>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMParameter.Name">
            <summary>
            The name of the parameter.
            </summary>
        </member>
        <member name="P:EliteAPI.EDSM.EDSMParameter.Value">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="T:EliteAPI.EliteDangerousAPI">
            <summary>
            Main EliteAPI class.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.IsReady">
            <summary>
            Set to true when the API is ready.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.StandardDirectory">
            <summary>
            The default directory of the Journal files <c>C:\Users\%username%\Saved Games\Frontier Developments\Elite Dangerous</c>.
            </summary>
            <remarks>
            If the default directory could not be returned, the current directory will be returned.
            </remarks>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Version">
            <summary>
            This version of EliteAPI.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.IsRunning">
            <summary>
            Whether the API is currently running.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.JournalDirectory">
            <summary>
            The Journal directory that is EliteAPI is currently using.
            </summary>
            <see cref="M:EliteAPI.EliteDangerousAPI.ChangeJournal(System.IO.DirectoryInfo)"/>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Events">
            <summary>
            All of the EliteAPI events are stored in this object. 
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Logger">
            <summary>
            The logger using across the API.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Status">
            <summary>
            Holds the ship's live status.
            </summary>
            <remarks>
            Values like the landing gear and other variables are stored here.
            </remarks>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Cargo">
            <summary>
            Holds information on the ship's current cargo situation.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Modules">
            <summary>
            Returns all the modules installed on the current ship.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Materials">
            <summary>
            Holds information on the ship's current materials situation.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Bindings">
            <summary>
            Holds information on all key bindings in the game set by the user.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Commander">
            <summary>
            Holds information about the commander.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.Location">
            <summary>
            Holds information about the last known location of the commander.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.DiscordRichPresence">
            <summary>
            Rich presence service for Discord.
            </summary>
        </member>
        <member name="P:EliteAPI.EliteDangerousAPI.SkipCatchUp">
            <summary>
            Whether the API should skip the processing of previous events before the API was started.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor">
            <summary>
            Creates a new EliteDangerousAPI object using the standard Journal directory.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor(System.IO.DirectoryInfo)">
            <summary>
            Creates a new EliteDangerousAPI object.
            </summary>
            <param name="JournalDirectory">The directory in which the Player Journals are located.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor(System.Boolean)">
            <summary>
            Creates a new EliteDangerousAPI object using the standard Journal directory.
            </summary>
            <param name="SkipCatchUp">Whether the API should skip the processing of previous events before the API was started.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.#ctor(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Creates a new EliteDangerousAPI object.
            </summary>
            <param name="journalDirectory">The directory in which the Player Journals are located.</param>
            <param name="skipCatchUp">Whether the API should skip the processing of previous events before the API was started.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.CheckForUpdate">
            <summary>
            Checks for a new update.
            </summary>
            <returns>Returns true if a newer version is available.</returns>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.Reset">
            <summary>
            Resets the API.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.Start(System.Boolean)">
            <summary>
            Starts the API.
            </summary>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.ChangeJournal(System.IO.DirectoryInfo)">
            <summary>
            Changes the journal directory.
            </summary>
            <param name="newJournalDirectory">The new journal directory.</param>
        </member>
        <member name="M:EliteAPI.EliteDangerousAPI.Stop">
            <summary>
            Stops the API.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnReady">
            <summary>
            Gets triggered when EliteAPI has successfully loaded up.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnQuit">
            <summary>
            Gets triggered when EliteAPI is closing.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnError">
            <summary>
            Gets triggered when EliteAPI could not successfully load up.
            </summary>
        </member>
        <member name="E:EliteAPI.EliteDangerousAPI.OnLoad">
            <summary>
            Gets triggered when EliteAPI is starting up.
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.Module">
            <summary>
            The name of the module
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.ModuleLocalised">
            <summary>
            The local name of the module
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.FullyRepaired">
            <summary>
            Whether modules are now fully repaired
            </summary>
        </member>
        <member name="P:EliteAPI.Events.AfmuRepairsInfo.Health">
            <summary>
            Value between 0 and 1.
            </summary>
        </member>
        <member name="T:EliteAPI.IEliteDangerousAPI">
            <summary>
            Interface for the EliteDangerousAPI class.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Version">
            <summary>
            Set to true when the API is ready.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.IsRunning">
            <summary>
            Whether the API is currently running.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.JournalDirectory">
            <summary>
            The Journal directory that is being used by the API.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.SkipCatchUp">
            <summary>
            Whether the API should skip the processing of previous events before the API was started.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Events">
            <summary>
            Object that holds all the events.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Logger">
            <summary>
            Objects that holds all logging related functions.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Status">
            <summary>
            Holds the ship's current status.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Cargo">
            <summary>
            Holds the ship's current cargo situation.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Modules">
            <summary>
            Returns all the modules installed on the current ship.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Bindings">
            <summary>
            Holds information on all key bindings in the game set by the user.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Commander">
            <summary>
            Holds information about the commander.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.Location">
            <summary>
            Holds information about the last known location of the commander.
            </summary>
        </member>
        <member name="E:EliteAPI.IEliteDangerousAPI.OnError">
            <summary>
            Gets triggered when EliteAPI could not successfully load up.
            </summary>
        </member>
        <member name="E:EliteAPI.IEliteDangerousAPI.OnQuit">
            <summary>
            Gets triggered when EliteAPI is closing.
            </summary>
        </member>
        <member name="E:EliteAPI.IEliteDangerousAPI.OnReady">
            <summary>
            Gets triggered when EliteAPI has successfully loaded up.
            </summary>
        </member>
        <member name="P:EliteAPI.IEliteDangerousAPI.DiscordRichPresence">
            <summary>
            Rich presence service for Discord.
            </summary>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.Reset">
            <summary>
            Resets the API.
            </summary>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.Start(System.Boolean)">
            <summary>
            Starts the API.
            </summary>
            <param name="runRichPresence"></param>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.Stop">
            <summary>
            Stops the API.
            </summary>
        </member>
        <member name="M:EliteAPI.IEliteDangerousAPI.ChangeJournal(System.IO.DirectoryInfo)">
            <summary>
            Changes the journal directory.
            </summary>
            <param name="newJournalDirectory"></param>
        </member>
        <member name="T:EliteAPI.ThirdParty.ThirdPartyWrapper">
            <summary>
            Class that functions as a wrapper for third party plugins.
            </summary>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.#ctor(EliteAPI.EliteDangerousAPI,System.String,System.String)">
            <summary>
            Creates a new ThirdPartyWrapper object.
            </summary>
            <param name="api">The EliteDangerousAPI api</param>
            <param name="name">The name of the plugin</param>
            <param name="iniPath">The path to the configuration file</param>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetVariables">
            <summary>
            Returns all the variables to be set.
            </summary>
            <returns>A list of variables</returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetRichPresenceSetting">
            <summary>
            Returns a value whether the API should automatically start the Discord Rich Presence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetEventVariables(System.Object)">
            <summary>
            Gets all the variables to be set from an event.
            </summary>
            <param name="e">A list of variables</param>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetEventName(System.Object)">
            <summary>
            Gets the name from an event.
            </summary>
            <param name="e">The name of the event.</param>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetIni">
            <summary>
            Returns the configuration file content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetJournalFolder">
            <summary>
            Gets the journal directory from the configuration file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.GetLogFolder">
            <summary>
            Gets the log directory from the configuration file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EliteAPI.ThirdParty.ThirdPartyWrapper.ProcessCall(System.String)">
            <summary>
            Processes third party plugin functions
            </summary>
            <param name="content"></param>
        </member>
    </members>
</doc>
